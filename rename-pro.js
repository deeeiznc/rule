const provider = $arguments.provider ?? "Provider";
const out = $arguments.out ?? "abr";
const countryData = {
  "ğŸ‡­ğŸ‡°": { name: "Hong Kong", abbr: "HK" },
  "ğŸ‡ºğŸ‡¸": { name: "United States", abbr: "US" },
  "ğŸ‡¯ğŸ‡µ": { name: "Japan", abbr: "JP" },
  "ğŸ‡¸ğŸ‡¬": { name: "Singapore", abbr: "SG" },
  "ğŸ‡¹ğŸ‡¼": { name: "Taiwan", abbr: "TW" }, "ğŸ‡¨ğŸ‡³": { name: "Taiwan", abbr: "TW" },
  "ğŸ‡°ğŸ‡·": { name: "South Korea", abbr: "KR" },
  "ğŸ‡©ğŸ‡ª": { name: "Germany", abbr: "DE" },
  "ğŸ‡¹ğŸ‡·": { name: "TÃ¼rkiye", abbr: "TR" },
  "ğŸ‡²ğŸ‡¾": { name: "Malaysia", abbr: "MY" },
  "ğŸ‡¦ğŸ‡º": { name: "Australia", abbr: "AU" },
  "ğŸ‡¬ğŸ‡§": { name: "United Kingdom", abbr: "UK" },
  "ğŸ‡¨ğŸ‡¦": { name: "Canada", abbr: "CA" },
  "ğŸ‡²ğŸ‡½": { name: "Mexico", abbr: "MX" },
  "ğŸ‡§ğŸ‡·": { name: "Brazil", abbr: "BR" },
  "ğŸ‡¨ğŸ‡±": { name: "Chile", abbr: "CL" },
  "ğŸ‡¦ğŸ‡·": { name: "Argentina", abbr: "AR" },
  "ğŸ‡¨ğŸ‡´": { name: "Colombia", abbr: "CO" },
  "ğŸ‡µğŸ‡ª": { name: "Peru", abbr: "PE" },
  "ğŸ‡§ğŸ‡´": { name: "Bolivia", abbr: "BO" },
  "ğŸ‡«ğŸ‡·": { name: "France", abbr: "FR" },
  "ğŸ‡³ğŸ‡±": { name: "Netherlands", abbr: "NL" },
  "ğŸ‡ªğŸ‡¸": { name: "Spain", abbr: "ES" },
  "ğŸ‡®ğŸ‡ª": { name: "Ireland", abbr: "IE" },
  "ğŸ‡®ğŸ‡¹": { name: "Italia", abbr: "IT" },
  "ğŸ‡±ğŸ‡º": { name: "Luxembourg", abbr: "LU" },
  "ğŸ‡¨ğŸ‡­": { name: "Switzerland", abbr: "CH" },
  "ğŸ‡©ğŸ‡°": { name: "Denmark", abbr: "DK" },
  "ğŸ‡«ğŸ‡®": { name: "Finland", abbr: "FI" },
  "ğŸ‡¸ğŸ‡ª": { name: "Sweden", abbr: "SE" },
  "ğŸ‡³ğŸ‡´": { name: "Norway", abbr: "NO" },
  "ğŸ‡¦ğŸ‡¹": { name: "Austria", abbr: "AT" },
  "ğŸ‡¨ğŸ‡¿": { name: "Czech", abbr: "CZ" },
  "ğŸ‡®ğŸ‡¸": { name: "Iceland", abbr: "IS" },
  "ğŸ‡§ğŸ‡ª": { name: "Belgium", abbr: "BE" },
  "ğŸ‡µğŸ‡¹": { name: "Portugal", abbr: "PT" },
  "ğŸ‡µğŸ‡±": { name: "Poland", abbr: "PL" },
  "ğŸ‡ªğŸ‡ª": { name: "Estonia", abbr: "EE" },
  "ğŸ‡­ğŸ‡º": { name: "Hungary", abbr: "HU" },
  "ğŸ‡·ğŸ‡º": { name: "Russia", abbr: "RU" },
  "ğŸ‡ºğŸ‡¦": { name: "Ukraine", abbr: "UA" },
  "ğŸ‡²ğŸ‡©": { name: "Moldova", abbr: "MD" },
  "ğŸ‡·ğŸ‡´": { name: "Romania", abbr: "RO" },
  "ğŸ‡§ğŸ‡¬": { name: "Bulgaria", abbr: "BG" },
  "ğŸ‡·ğŸ‡¸": { name: "Serbia", abbr: "RS" },
  "ğŸ‡¬ğŸ‡·": { name: "Greece", abbr: "GR" },
  "ğŸ‡®ğŸ‡±": { name: "Israel", abbr: "IL" },
  "ğŸ‡®ğŸ‡¶": { name: "Iraq", abbr: "IQ" },
  "ğŸ‡¹ğŸ‡¬": { name: "Togo", abbr: "TG" },
  "ğŸ‡ªğŸ‡¬": { name: "Egypt", abbr: "EG" },
  "ğŸ‡¯ğŸ‡´": { name: "Jordan", abbr: "JO" },
  "ğŸ‡¹ğŸ‡³": { name: "Tunisia", abbr: "TN" },
  "ğŸ‡¦ğŸ‡ª": { name: "Dubai", abbr: "AE" },
  "ğŸ‡¸ğŸ‡¦": { name: "Saudi Arabia", abbr: "SA" },
  "ğŸ‡ºğŸ‡¿": { name: "Uzbekistan", abbr: "UZ" },
  "ğŸ‡µğŸ‡°": { name: "Pakistan", abbr: "PK" },
  "ğŸ‡°ğŸ‡¿": { name: "Kazakhstan", abbr: "KZ" },
  "ğŸ‡³ğŸ‡¬": { name: "Nigeria", abbr: "NG" },
  "ğŸ‡¦ğŸ‡´": { name: "Angola", abbr: "AO" },
  "ğŸ‡¿ğŸ‡¦": { name: "South Africa", abbr: "ZA" },
  "ğŸ‡¦ğŸ‡¶": { name: "Antarctica", abbr: "AQ" },
  "ğŸ‡®ğŸ‡³": { name: "India", abbr: "IN" },
  "ğŸ‡®ğŸ‡©": { name: "Indonesia", abbr: "ID" },
  "ğŸ‡µğŸ‡­": { name: "Philippines", abbr: "PH" },
  "ğŸ‡²ğŸ‡´": { name: "Macao", abbr: "MO" },
  "ğŸ‡¹ğŸ‡­": { name: "Thailand", abbr: "TH" },
  "ğŸ‡»ğŸ‡³": { name: "Vietnam", abbr: "VN" },
  "ğŸ‡°ğŸ‡­": { name: "Cambodia", abbr: "KH" },
  "ğŸ‡§ğŸ‡©": { name: "Bangladesh", abbr: "BD" },
  "ğŸ‡³ğŸ‡µ": { name: "Nepal", abbr: "NP" },
  "ğŸ‡²ğŸ‡³": { name: "Mongolia", abbr: "MN" },
  "ğŸ‡³ğŸ‡¿": { name: "New Zealand", abbr: "NZ" },
};
const flagStr = ($server.name.match(/^[\u{1F1E6}-\u{1F1FF}]{2}/u) || [])[0] || "";
const cleanedName = $server.name.replace(flagStr, "").trim();
const words = [...new Intl.Segmenter(undefined, { granularity: "word" }).segment(cleanedName)]
  .filter(s => s.isWordLike || /[-.]/.test(s.segment)).map(s => s.segment);

const getCountry = (abbrKey, type = out.toLowerCase() === 'all' ? 'name' : 'abbr') => 
  Object.values(countryData).find(c => c.abbr === abbrKey)?.[type] || "";

let countryName = flagStr ? getCountry(countryData[flagStr]?.abbr) : words[0]?.substring(0,2).toUpperCase();

countryName = flagStr && countryData[flagStr] 
  ? (out === 'all' ? countryData[flagStr].name : countryData[flagStr].abbr) 
  : getCountry(words[0]?.substring(0,2).toUpperCase()) || "";

const processed = [`${provider} ${countryName}`].concat(
  words.slice(1).filter(w => !/Ë£|\b(x\d+|\d+x)/i.test(w.replace(/Ë£/g, "")))
);

$server.name = flagStr + processed.reduce((a,c,i) => `${a}${i&&!/[-.]/.test(a.slice(-1))?' ':''}${c}`);