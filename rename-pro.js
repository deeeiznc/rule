const provider = $arguments.provider ?? "Provider",
  out = $arguments.out ?? "abbr",
  countryData = {
    "ğŸ‡­ğŸ‡°": { full: "Hong Kong", abbr: "HK" },
    "ğŸ‡ºğŸ‡¸": { full: "United States", abbr: "US" },
    "ğŸ‡¯ğŸ‡µ": { full: "Japan", abbr: "JP" },
    "ğŸ‡¸ğŸ‡¬": { full: "Singapore", abbr: "SG" },
    "ğŸ‡¹ğŸ‡¼": { full: "Taiwan", abbr: "TW" },
    "ğŸ‡¨ğŸ‡³": { full: "Taiwan", abbr: "TW" },
    "ğŸ‡°ğŸ‡·": { full: "South Korea", abbr: "KR" },
    "ğŸ‡©ğŸ‡ª": { full: "Germany", abbr: "DE" },
    "ğŸ‡¹ğŸ‡·": { full: "TÃ¼rkiye", abbr: "TR" },
    "ğŸ‡²ğŸ‡¾": { full: "Malaysia", abbr: "MY" },
    "ğŸ‡¦ğŸ‡º": { full: "Australia", abbr: "AU" },
    "ğŸ‡¬ğŸ‡§": { full: "United Kingdom", abbr: "UK" },
    "ğŸ‡¨ğŸ‡¦": { full: "Canada", abbr: "CA" },
    "ğŸ‡²ğŸ‡½": { full: "Mexico", abbr: "MX" },
    "ğŸ‡§ğŸ‡·": { full: "Brazil", abbr: "BR" },
    "ğŸ‡¨ğŸ‡±": { full: "Chile", abbr: "CL" },
    "ğŸ‡¦ğŸ‡·": { full: "Argentina", abbr: "AR" },
    "ğŸ‡¨ğŸ‡´": { full: "Colombia", abbr: "CO" },
    "ğŸ‡µğŸ‡ª": { full: "Peru", abbr: "PE" },
    "ğŸ‡§ğŸ‡´": { full: "Bolivia", abbr: "BO" },
    "ğŸ‡«ğŸ‡·": { full: "France", abbr: "FR" },
    "ğŸ‡³ğŸ‡±": { full: "Netherlands", abbr: "NL" },
    "ğŸ‡ªğŸ‡¸": { full: "Spain", abbr: "ES" },
    "ğŸ‡®ğŸ‡ª": { full: "Ireland", abbr: "IE" },
    "ğŸ‡®ğŸ‡¹": { full: "Italia", abbr: "IT" },
    "ğŸ‡±ğŸ‡º": { full: "Luxembourg", abbr: "LU" },
    "ğŸ‡¨ğŸ‡­": { full: "Switzerland", abbr: "CH" },
    "ğŸ‡©ğŸ‡°": { full: "Denmark", abbr: "DK" },
    "ğŸ‡«ğŸ‡®": { full: "Finland", abbr: "FI" },
    "ğŸ‡¸ğŸ‡ª": { full: "Sweden", abbr: "SE" },
    "ğŸ‡³ğŸ‡´": { full: "Norway", abbr: "NO" },
    "ğŸ‡¦ğŸ‡¹": { full: "Austria", abbr: "AT" },
    "ğŸ‡¨ğŸ‡¿": { full: "Czech", abbr: "CZ" },
    "ğŸ‡®ğŸ‡¸": { full: "Iceland", abbr: "IS" },
    "ğŸ‡§ğŸ‡ª": { full: "Belgium", abbr: "BE" },
    "ğŸ‡µğŸ‡¹": { full: "Portugal", abbr: "PT" },
    "ğŸ‡µğŸ‡±": { full: "Poland", abbr: "PL" },
    "ğŸ‡ªğŸ‡ª": { full: "Estonia", abbr: "EE" },
    "ğŸ‡­ğŸ‡º": { full: "Hungary", abbr: "HU" },
    "ğŸ‡·ğŸ‡º": { full: "Russia", abbr: "RU" },
    "ğŸ‡ºğŸ‡¦": { full: "Ukraine", abbr: "UA" },
    "ğŸ‡²ğŸ‡©": { full: "Moldova", abbr: "MD" },
    "ğŸ‡·ğŸ‡´": { full: "Romania", abbr: "RO" },
    "ğŸ‡§ğŸ‡¬": { full: "Bulgaria", abbr: "BG" },
    "ğŸ‡·ğŸ‡¸": { full: "Serbia", abbr: "RS" },
    "ğŸ‡¬ğŸ‡·": { full: "Greece", abbr: "GR" },
    "ğŸ‡®ğŸ‡±": { full: "Israel", abbr: "IL" },
    "ğŸ‡®ğŸ‡¶": { full: "Iraq", abbr: "IQ" },
    "ğŸ‡¹ğŸ‡¬": { full: "Togo", abbr: "TG" },
    "ğŸ‡ªğŸ‡¬": { full: "Egypt", abbr: "EG" },
    "ğŸ‡¯ğŸ‡´": { full: "Jordan", abbr: "JO" },
    "ğŸ‡¹ğŸ‡³": { full: "Tunisia", abbr: "TN" },
    "ğŸ‡¦ğŸ‡ª": { full: "Dubai", abbr: "AE" },
    "ğŸ‡¸ğŸ‡¦": { full: "Saudi Arabia", abbr: "SA" },
    "ğŸ‡ºğŸ‡¿": { full: "Uzbekistan", abbr: "UZ" },
    "ğŸ‡µğŸ‡°": { full: "Pakistan", abbr: "PK" },
    "ğŸ‡°ğŸ‡¿": { full: "Kazakhstan", abbr: "KZ" },
    "ğŸ‡³ğŸ‡¬": { full: "Nigeria", abbr: "NG" },
    "ğŸ‡¦ğŸ‡´": { full: "Angola", abbr: "AO" },
    "ğŸ‡¿ğŸ‡¦": { full: "South Africa", abbr: "ZA" },
    "ğŸ‡¦ğŸ‡¶": { full: "Antarctica", abbr: "AQ" },
    "ğŸ‡®ğŸ‡³": { full: "India", abbr: "IN" },
    "ğŸ‡®ğŸ‡©": { full: "Indonesia", abbr: "ID" },
    "ğŸ‡µğŸ‡­": { full: "Philippines", abbr: "PH" },
    "ğŸ‡²ğŸ‡´": { full: "Macao", abbr: "MO" },
    "ğŸ‡¹ğŸ‡­": { full: "Thailand", abbr: "TH" },
    "ğŸ‡»ğŸ‡³": { full: "Vietnam", abbr: "VN" },
    "ğŸ‡°ğŸ‡­": { full: "Cambodia", abbr: "KH" },
    "ğŸ‡§ğŸ‡©": { full: "Bangladesh", abbr: "BD" },
    "ğŸ‡³ğŸ‡µ": { full: "Nepal", abbr: "NP" },
    "ğŸ‡²ğŸ‡³": { full: "Mongolia", abbr: "MN" },
    "ğŸ‡³ğŸ‡¿": { full: "New Zealand", abbr: "NZ" }
  },
  abMap = Object.values(countryData).reduce((m, o) => (m[o.abbr] = o, m), {});

const flag = $server.name.match(/^[\u{1F1E6}-\u{1F1FF}]{2}/u)?.[0] || "",
  words = [...new Intl.Segmenter(undefined, { granularity: "word" })
    .segment($server.name.replace(flag, "").trim())]
    .filter(s => s.isWordLike || /[-.]/.test(s.segment))
    .map(s => s.segment),
  country = flag && countryData[flag]
    ? countryData[flag][out]
    : (words[0] ? abMap[words[0].slice(0, 2).toUpperCase()]?.[out] : ""),
  processed = [provider + " " + country].concat(
    words.slice(1).filter(x => !/Ë£|\b(x\d+|\d+x)/i.test(x.replace(/Ë£/g, "")))
  );

$server.name = flag + " " + processed.reduce((a, c) => /[-.]$/.test(a) ? a + c : a + " " + c);